// Generated by CoffeeScript 1.10.0
angular.module('postController', ['ngMaterial', 'WPAPI', 'ngSanitize', 'ngMessages']).controller('PostCtrl', [
  '$scope', '$compile', '$routeParams', '$mdMedia', '$mdBottomSheet', 'PostService', 'TagService', 'CategoryService', 'CommentService', 'CommentSlugService', function($scope, $compile, $routeParams, $mdMedia, $mdBottomSheet, PostService, TagService, CategoryService, CommentService, CommentSlugService) {
    var buttonElement, buttonHtml;
    $scope.reply = {
      author_name: '',
      author_email: '',
      author_url: '',
      content: ''
    };
    $scope.post = PostService.slug({
      slug: $routeParams.slug
    }, function() {
      return $scope.reply.post = $scope.post.id;
    });
    $scope.cats = CategoryService.queryObject();
    $scope.tags = TagService.queryObject();
    $scope.$mdMedia = $mdMedia;
    $scope.$mdBottomSheet = $mdBottomSheet;
    $scope.comments = CommentSlugService.query({
      slug: $routeParams.slug
    });
    $scope.post_comment = function() {
      console.log($scope.reply);
      return CommentService.save($scope.reply);
    };
    $scope.hideBottomSheet = function() {
      console.log(233);
      return $mdBottomSheet.hide();
    };
    $scope.popComment = function() {
      return $mdBottomSheet.show({
        templateUrl: 'assets/partial/comment-popup.html',
        controller: angular.noop,
        locals: {
          parent: $scope
        },
        controllerAs: 'commentCtrl',
        bindToController: true,
        clickOutsideToClose: false,
        disableBackdrop: true,
        escapeToClose: true,
        disableParentScroll: false
      });
    };
    buttonHtml = '<md-button class="md-fab md-fab-bottom-right" id="pop-comment-button" ng-click="popComment()">\n  <md-icon>comment</md-icon>\n</md-button>';
    buttonElement = $compile(buttonHtml)($scope);
    angular.element(document).find('body').append(buttonElement);
  }
]).run(function() {
  var scrollButton;
  scrollButton = function() {
    var footerHeight, mainContent, offsetMargin, transformHeight, transformMargin;
    mainContent = document.querySelector('#main > md-content');
    transformMargin = parseInt(mainContent.style.transform.replace('translate3d(0px, ', '').replace('px, 0px)', ''));
    footerHeight = document.querySelector('.footer').scrollHeight;
    offsetMargin = 10;
    transformHeight = -mainContent.scrollHeight + mainContent.clientHeight + mainContent.scrollTop - transformMargin + footerHeight - offsetMargin;
    try {

    } catch (undefined) {}
    return requestAnimationFrame(scrollButton);
  };
  return requestAnimationFrame(scrollButton);
});

//# sourceMappingURL=postController.js.map
